parameters:
  jobName: ''
  dependsOn: ''
  moduleName: ''

jobs:
  # push updates to Heroku repo
  - job: ${{ parameters.jobName }}
    dependsOn:
      - ${{ parameters.dependsOn }}
    pool:
      vmImage: ubuntu-latest
    steps:
      - template: steps-prepare-maven.yml
      - script: |
          cd ${{ parameters.moduleName }}-heroku
          git config user.email "$(Build.RequestedForEmail)"
          git config user.name "$(Build.RequestedFor)"
          git checkout $(Build.SourceBranchName)
          git pull
        displayName: Checkout $(Build.SourceBranchName)
      - task: Maven@3
        displayName: Release Notes Parameter Substitutions
        inputs:
          mavenPomFile: pom.xml
          mavenOptions: -Xmx3072m $(MavenOpts)
          javaHomeOption: JDKVersion
          jdkVersionOption: "1.8"
          jdkArchitectureOption: x64
          publishJUnitResults: true
          testResultsFiles: "**/surefire-reports/TEST-*.xml"
          goals: -pl ${{ parameters.moduleName }}-heroku -Dmaven.test.skip=true $(MavenOpts) package
        env:
          # used by maven for substitutions in release notes and URLs
          REPO_OWNER: $(RELEASE_USER)
          H_REPO_NAME: ${{ parameters.moduleName }}-heroku$(RELEASE_SUFFIX)
          P_REPO_NAME: ${{ parameters.moduleName }}-heroku$(RELEASE_SUFFIX)
          O_REPO_NAME: owlcms4$(RELEASE_SUFFIX)
      - script: |
          cd ${{ parameters.moduleName }}-heroku
          # add new files
          git add -A && git commit -m "$(Revision) heroku" --allow-empty

          # push new version to the release repo
          # no tag, will be created by the release task
          git push https://$(RELEASE_TOKEN)@github.com/$(RELEASE_USER)/${{ parameters.moduleName }}-heroku$(RELEASE_SUFFIX).git $(Build.SourceBranchName):master --force
          git push https://$(RELEASE_TOKEN)@github.com/$(RELEASE_USER)/${{ parameters.moduleName }}-heroku$(RELEASE_SUFFIX).git $(Revision) --force

          # create a tag with the current version number
          git tag $(Revision) -f -a -m "$(Revision) ${{ parameters.moduleName }}-heroku"

          ## push changes and tag back to upstream master repo
          git push https://$(REPO_TOKEN)@github.com/$(REPO_USER)/${{ parameters.moduleName }}-heroku.git $(Build.SourceBranchName) --force
          git push https://$(REPO_TOKEN)@github.com/$(REPO_USER)/${{ parameters.moduleName }}-heroku.git $(Revision) --force
        displayName: Push to repositories
      - task: GitHubRelease@0
        inputs:
          ${{ if eq(variables['Build.SourceBranchName'], 'develop') }}:
            gitHubConnection: github.com_jflamy-dev
            repositoryName: $(RELEASE_USER)/${{ parameters.moduleName }}-heroku$(RELEASE_SUFFIX)
            isPreRelease: true
          ${{ if eq(variables['Build.SourceBranchName'], 'master') }}:
            gitHubConnection: github.com_jflamy-dev
            repositoryName: $(RELEASE_USER)/${{ parameters.moduleName }}-heroku$(RELEASE_SUFFIX)
            isPreRelease: false
          action: create # Options: create, edit, delete
          target: master # branch on which we are tagging, mandatory if not releasing in the build repo
          tagSource: manual
          tag: $(Revision)
          assets: |
            $(Build.SourcesDirectory)/${{ parameters.moduleName }}-heroku/target/${{ parameters.moduleName }}-heroku.tar.gz
          releaseNotesSource: "file"
          releaseNotesFile: $(Build.SourcesDirectory)/${{ parameters.moduleName }}-heroku/ReleaseNotes.md
          addChangeLog: false
